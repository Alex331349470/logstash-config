input {
	jdbc {
		type => "mes_run_node"
		jdbc_driver_library => "/home/alex/elk/mysql-connector-java-5.1.36.jar"
    		jdbc_driver_class => "com.mysql.jdbc.Driver"
    		jdbc_connection_string => "jdbc:mysql://10.10.16.51:3306/zec_mes?tinyInt1isBit=false&zeroDateTimeBehavior=convertToNull&characterEncoding=UTF8&characterSetResult=UTF8"
		connection_retry_attempts => "3"
		jdbc_validate_connection => "true"
		jdbc_validation_timeout => "3600"
		jdbc_paging_enabled => "true"
		jdbc_page_size => "5000"	
    		jdbc_user => "etl"
		jdbc_password => "ic.Etl@123456"
    		schedule => "* * * * * Asia/Shanghai"
    		statement => "select runNodeid as mrn_run_node_id, batchid as mrn_batch_id, batch_no as mrn_batch_no, nodeid as mrn_node_id, name as mrn_name, serial_no as mrn_serial_no, next_serial_no as mrn_next_serial_no, allotid as mrn_allot_id, weight_manual as mrn_weight_manual, weight_input as mrn_weight_intput, weight_output as mrn_weight_output, flag_status as mrn_flag_status, flag_exceptions as mrn_flag_exceptions, flag_qc as mrn_flag_qc, qc_no as mrn_qc_no, qc_intro as mrn_qc_intro, insert_dt as mrn_insert_dt, operator as mrn_operator, finish_dt as mrn_finish_dt, finish_operator as mrn_finish_operator from mes_run_node where runNodeid > :sql_last_value" 
		record_last_run => true
                use_column_value => true
                tracking_column => "mrn_run_node_id"
                tracking_column_type => "numeric"
                last_run_metadata_path => "/home/alex/elk/logstash-mysql/mysql_track/mes_run_node_last_id.txt"
                clean_run => false
	}
}

filter {
	if [type] == "mes_run_node" {
		json {
			source => "mrn_qc_intro"
			target => "mrn_qc_intro"
		}
	}
}

output {
	if [type] == "mes_run_node" {
		elasticsearch {
			hosts => "http://localhost:9200"
			index => "zec_imp"
		}
	}
}
